!!ARBvp1.0

# bumpmap.vp
#
# setup interpolants for bumpmap lighting

ATTRIB iPos = vertex.position;       # input position
ATTRIB iPrC = vertex.color.primary;  # input primary color
ATTRIB iNrm = vertex.normal;         # input normal
ATTRIB iTC0 = vertex.texcoord[0];    # input texcoord

OUTPUT oPos = result.position;       # output position
OUTPUT oPrC = result.color.primary;  # output primary color
OUTPUT oTC0 = result.texcoord[0];    # output texcoord 0
OUTPUT oTC1 = result.texcoord[1];    # output texcoord 1
OUTPUT oTC2 = result.texcoord[2];    # output texcoord 2
OUTPUT oTC3 = result.texcoord[3];    # output texcoord 3

PARAM mvp[4] = { state.matrix.mvp }; # model-view * projection matrix
PARAM mv[4] =  { state.matrix.modelview }; # model-view matrix
# inverse transpose of model-view matrix:
PARAM mvIT[4] = { state.matrix.modelview.invtrans }; 

PARAM lightPos = program.local[0];   # light pos in eye space

TEMP N, V, L, H;                     # temporary registers

DP4 oPos.x, iPos, mvp[0];            # xform input pos by MVP
DP4 oPos.y, iPos, mvp[1];
DP4 oPos.z, iPos, mvp[2];
DP4 oPos.w, iPos, mvp[3];

DP4 V.x, iPos, mv[0];                # xform input pos by MV
DP4 V.y, iPos, mv[1];
DP4 V.z, iPos, mv[2];
DP4 V.w, iPos, mv[3];

SUB L, lightPos, V;                  # vertex to light vector

DP3 N.x, iNrm, mvIT[0];              # xform norm to eye space
DP3 N.y, iNrm, mvIT[1];
DP3 N.z, iNrm, mvIT[2];

DP3 N.w, N, N;                       # normalize normal
RSQ N.w, N.w;
MUL oTC0, N, N.w;                    # put N in texcoord 0

DP3 L.w, L, L;                       # normalize light vector
RSQ L.w, L.w;
MUL L, L, L.w;
MOV oTC1, L;                         # put L in texcoord 1

ADD H, L, {0, 0, 1};                 # half-angle vector
DP3 H.w, H, H;                       # normalize half-angle vector
RSQ H.w, H.w;
MUL oTC2, H, H.w;                    # put H in texcoord 2

MOV oTC3, iTC0;                      # copy bumpmap texcoords

MOV oPrC, iPrC;                      # copy primary color in to out

END
